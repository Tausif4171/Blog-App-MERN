[{"C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\index.tsx":"1","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\App.tsx":"2","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Layout.tsx":"3","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Post.tsx":"4","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Header.tsx":"5","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Login.tsx":"6","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Register.tsx":"7","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\CreatePost.tsx":"8","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Blogs.tsx":"9"},{"size":272,"mtime":1687783192675,"results":"10","hashOfConfig":"11"},{"size":935,"mtime":1692205244103,"results":"12","hashOfConfig":"11"},{"size":385,"mtime":1692112100230,"results":"13","hashOfConfig":"11"},{"size":3336,"mtime":1692254786907,"results":"14","hashOfConfig":"11"},{"size":3009,"mtime":1692197482217,"results":"15","hashOfConfig":"11"},{"size":7005,"mtime":1690705335372,"results":"16","hashOfConfig":"11"},{"size":3986,"mtime":1691411841188,"results":"17","hashOfConfig":"11"},{"size":2094,"mtime":1692083209872,"results":"18","hashOfConfig":"11"},{"size":11725,"mtime":1692252303042,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"lrqhf2",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"23"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"23"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"23"},"C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\index.tsx",[],[],[],"C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\App.tsx",["54"],[],"import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Layout from './components/Layout';\r\nimport Blogs from './components/Blogs';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport CreatePost from './components/CreatePost';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <div className='bg-[#dbdada] w-full min-h-screen'>\r\n        <Router>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Layout />}>\r\n              <Route index element={<Blogs />} />\r\n              <Route path='/login' element={<Login />} />\r\n              <Route path='/register' element={<Register />} />\r\n              <Route path='/create' element={<CreatePost />} />\r\n            </Route>\r\n          </Routes>\r\n        </Router>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Layout.tsx",[],[],"C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Post.tsx",["55","56","57","58"],[],"import React from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './toast.css'\r\nimport moment from 'moment'\r\n\r\ninterface IPost {\r\n    title: string,\r\n    summary: string,\r\n    content: string,\r\n    cover: string,\r\n    createdAt: string\r\n}\r\n\r\nfunction Post({ title, summary, content, cover, createdAt }: IPost) {\r\n    // const notify = () => toast.success(\"Wow so easy!\", {\r\n    //     position: toast.POSITION.BOTTOM_LEFT,\r\n    //     className: 'toast-message'\r\n    // });\r\n    return (\r\n        <div className='flex flex-col justify-center items-center min-h-screen'>\r\n            <div className='w-[50%] lg:w-[30%] bg-slate-50'>\r\n                <img src={cover} className='w-full' />\r\n                <div className='p-4'>\r\n                    <h1 className='text-[20px] font-medium mb-2'>{title}</h1>\r\n                    <div className='pb-2'>\r\n                        <p className='flex gap-[8px] text-[13px]'><a className='font-semibold'>John Doe</a><time>{moment(createdAt).format('D-MM-YYYY h:mmA')}</time></p>\r\n                    </div>\r\n                    <p className=''>\r\n                        {summary}\r\n                    </p>\r\n                    {/* <button onClick={notify}>Notify!</button> */}\r\n                    {/* <ToastContainer /> */}\r\n                </div>\r\n            </div>\r\n\r\n            {/* <div className='w-[50%] lg:w-[30%] mb-10 bg-slate-50'>\r\n                <img src='https://techcrunch.com/wp-content/uploads/2023/06/oak-park-river-forest-high-school.jpg?w=1390&crop=1' className='w-full' />\r\n                <div className='p-4'><h1 className='text-[20px] font-medium mb-2'>High school changes every student’s password to ‘Ch@ngeme!’</h1>\r\n                    <div className='pb-2'>\r\n                        <p className='flex gap-[8px] text-[13px]'><a className='font-semibold'>Rahul Dravid</a><time>5-07-2023 10:18</time></p>\r\n                    </div>\r\n                    <p className=''>\r\n                        After a cybersecurity audit mistakenly reset everyone’s password, a high school changed every student’s password to\r\n                        “Ch@ngeme!” giving every student the chance to hack into any other student’s account, according to emails obtained by\r\n                        TechCrunch.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='w-[50%] lg:w-[30%] mb-10 bg-slate-50'>\r\n                <img src='https://techcrunch.com/wp-content/uploads/2021/06/GettyImages-1174418589-1.jpg?w=1390&crop=1' className='w-full' />\r\n                <div className='p-4'><h1 className='text-[20px] font-medium mb-2'>Crypto losses halved in Q2 2023 to $204M</h1>\r\n                    <div className='pb-2'>\r\n                        <p className='flex gap-[8px] text-[13px]'><a className='font-semibold'>Rahul Jain</a><time>1-07-2023 9:00</time></p>\r\n                    </div>\r\n                    <p className=''>\r\n                        As if the pessimism around crypto wasn’t enough, the industry has historically been hounded by hackers and scammers looking\r\n                        to make a quick buck.\r\n                    </p>\r\n                </div>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Header.tsx",["59"],[],"import React, { useEffect, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const profile = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:4000/profile', {\r\n                credentials: 'include',\r\n                method: 'GET'\r\n            });\r\n\r\n            if (response.ok) {\r\n                const info = await response.json();\r\n                setEmail(info.email);\r\n                setLoggedIn(true);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching profile:', error);\r\n        }\r\n    };\r\n\r\n    const logout = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:4000/logout', {\r\n                credentials: 'include',\r\n                method: 'POST'\r\n            });\r\n\r\n            if (response.ok) {\r\n                setLoggedIn(false);\r\n                navigate('/'); // Redirect to the home page after logout\r\n            } else {\r\n                console.error('Logout failed');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error logging out:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        profile();\r\n    });\r\n\r\n    return (\r\n\r\n            <header className='flex flex-row justify-around items-center bg-[#fff] fixed top-0 w-full h-[50px] text-[#000]'>\r\n                <Link to={'/'} className='text-[22px] text-[#222222] font-bold'>\r\n                    MyBlog\r\n                </Link>\r\n                <nav>\r\n                    <ul className='flex flex-row gap-4 text-[16px] cursor-pointer'>\r\n                        <Link to={'/'}><li className='hover:text-[#222222] text-[#606060] font-medium'>Home</li></Link>\r\n                        <Link to={'/'}><li className='hover:text-[#222222] text-[#606060] font-medium'>About</li></Link>\r\n                        <Link to={'/'}><li className='hover:text-[#222222] text-[#606060] font-medium'>Blog</li></Link>\r\n                        {loggedIn ? (\r\n                            <>\r\n                                <Link to={'/create'}><li className='hover:text-[#222222] text-[#606060] font-medium'>Create</li></Link>\r\n                                <li onClick={logout} className='hover:text-[#222222] text-[#606060] font-medium'>Logout</li>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <Link to={'/login'}><li className='hover:text-[#222222] text-[#606060] font-medium'>Login</li></Link>\r\n                                <Link to={'/register'}><li className='hover:text-[#222222] text-[#606060] font-medium'>Register</li></Link>\r\n                            </>\r\n                        )}\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n    \r\n    );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Login.tsx",["60"],[],"// import { Dialog, Transition } from '@headlessui/react'\r\nimport { Fragment, useState } from 'react'\r\n\r\nimport './toast.css'\r\nimport { useNavigate } from 'react-router-dom'\r\nfunction Login() {\r\n    // let [isOpen, setIsOpen] = useState(false)\r\n\r\n    // function closeModal() {\r\n    //     setIsOpen(false)\r\n    // }\r\n\r\n    // function openModal() {\r\n    //     setIsOpen(true)\r\n    // }\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const navigate = useNavigate()\r\n    const login = async (e: any) => {\r\n        e.preventDefault()\r\n        const response = await fetch('http://localhost:4000/login', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ email, password }),\r\n            headers: { 'Content-Type': 'application/json' },\r\n            credentials: 'include'\r\n        })\r\n        console.log(response)\r\n        if (response.status === 200) {\r\n            navigate('/')\r\n        }\r\n        else {\r\n            alert('please enter correct credential!')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className='flex flex-col w-[25%] mx-auto my-[80px]' onSubmit={login}>\r\n                {/* <label className='align-center items-center'>Login</label> */}\r\n                <div className='flex flex-col'>\r\n                    <input\r\n                        placeholder='Enter your email'\r\n                        className='mt-3 rounded p-2 outline-none'\r\n                        value={email} onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    <input\r\n                        placeholder='Enter your password'\r\n                        className='mt-3 rounded p-2 outline-none'\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                    />\r\n                </div>\r\n                <button className='bg-[#555] rounded-[4px] mt-6 text-[#fff] p-2'>Login</button>\r\n            </form>\r\n\r\n            {/* <button className=\"ripple\">Button</button> */}\r\n\r\n            {/* <div>\r\n                <button onClick={handleOpenModal}>Open Modal</button>\r\n                {isModalOpen && (\r\n                    <div className={` ${isModalOpen ? 'modal-content' : 'animate-fade-out'} modal fixed left-1/2 top-1/4 bg-[#fff] w-[459px] rounded-[8px] h-auto shadow-md`}>\r\n                        <div >\r\n                            <h3 className=\"modal-heading\">Modal Title</h3>\r\n                            <p>Modal Content</p>\r\n                            <button onClick={handleCloseModal}>Close Modal</button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div> */}\r\n\r\n            {/* <div>\r\n                <button onClick={handleOpenModal}>Open Modal</button>\r\n                <div className={`modal-overlay ${isModalOpen ? 'visible' : 'hidden'}`}>\r\n                    <div className={`modal-content ${isModalOpen ? 'visible' : 'hidden'}`}>\r\n                        <h3 className=\"modal-heading\">Modal Title</h3>\r\n                        <p>Modal Content</p>\r\n                        <button onClick={handleCloseModal}>Close Modal</button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"fixed inset-0 flex items-center justify-center\">\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={openModal}\r\n                    className=\"rounded-md bg-black bg-opacity-20 px-4 py-2 text-sm font-medium text-white hover:bg-opacity-30 focus:outline-none focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75\"\r\n                >\r\n                    Open dialog\r\n                </button>\r\n            </div>\r\n\r\n            <Transition appear show={isOpen} as={Fragment}>\r\n                <Dialog className=\"relative z-10\" onClose={closeModal}>\r\n                    <Transition.Child\r\n                        as={Fragment}\r\n                        enter=\"ease-out duration-300\"\r\n                        enterFrom=\"opacity-0\"\r\n                        enterTo=\"opacity-100\"\r\n                        leave=\"ease-in duration-200\"\r\n                        leaveFrom=\"opacity-100\"\r\n                        leaveTo=\"opacity-0\"\r\n                    >\r\n                        <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\r\n                    </Transition.Child>\r\n\r\n                    <div className=\"fixed inset-0 overflow-y-auto\">\r\n                        <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\r\n                            <Transition.Child\r\n                                as={Fragment}\r\n                                enter=\"ease-out duration-300\"\r\n                                enterFrom=\"opacity-0 scale-95\"\r\n                                enterTo=\"opacity-100 scale-100\"\r\n                                leave=\"ease-in duration-200\"\r\n                                leaveFrom=\"opacity-100 scale-100\"\r\n                                leaveTo=\"opacity-0 scale-95\"\r\n                            >\r\n                                <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all\">\r\n                                    <Dialog.Title\r\n\r\n                                        className=\"text-lg font-medium leading-6 text-gray-900\"\r\n                                    >\r\n                                        Payment successful\r\n                                    </Dialog.Title>\r\n                                    <div className=\"mt-2\">\r\n                                        <p className=\"text-sm text-gray-500\">\r\n                                            Your payment has been successfully submitted. We’ve sent\r\n                                            you an email with all of the details of your order.\r\n                                        </p>\r\n                                    </div>\r\n\r\n                                    <div className=\"mt-4\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"inline-flex justify-center rounded-md border border-transparent bg-blue-100 px-4 py-2 text-sm font-medium text-blue-900 hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2\"\r\n                                            onClick={closeModal}\r\n                                        >\r\n                                            Got it, thanks!\r\n                                        </button>\r\n                                    </div>\r\n                                </Dialog.Panel>\r\n                            </Transition.Child>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n            </Transition> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Register.tsx",["61","62","63","64"],[],"import React, { useState } from 'react'\r\nimport * as Yup from 'yup';\r\nimport errorIcon from '../assets/icons/errorIcon.svg'\r\n\r\nimport './toast.css'\r\n\r\nfunction Register() {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [errors, setErrors] = useState<{ [key: string]: string }>({});\r\n    console.log({ errors })\r\n\r\n    async function register(e: any) {\r\n        e.preventDefault()\r\n        const response = await fetch('http://localhost:4000/register', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ email, password }),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n        if (response.status === 200) {\r\n            alert('Registration Successfully!')\r\n        }\r\n        else {\r\n            alert('Registration Failed!')\r\n        }\r\n    }\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        email: Yup.string()\r\n            .required('Email is required.')\r\n            .matches(/^[A-Za-z]*$/, 'Only letters are allowed in the email field.')\r\n    });\r\n\r\n    const handleSubmit = async (e: any) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            // Validate the form data against the schema\r\n            await validationSchema.validate({ email }, { abortEarly: false });\r\n\r\n            // Form data is valid, perform form submission logic here...\r\n            console.log('Form data submitted:', email);\r\n            register(e);\r\n            setErrors({})\r\n        } catch (validationErrors: any) {\r\n            // Yup validation errors occurred, set the errors state accordingly\r\n            const errorsObject: any = {};\r\n            (validationErrors as Yup.ValidationError).inner.forEach((error: any) => {\r\n                errorsObject[error.path] = error.message;\r\n            });\r\n            setErrors(errorsObject);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form className='flex flex-col w-[25%] mx-auto my-[80px]' onSubmit={handleSubmit}>\r\n                {/* <label className='align-center items-center'>Login</label> */}\r\n                <div className='flex flex-col'>\r\n                    <input\r\n                        placeholder='Enter your email'\r\n                        className={`mt-3 rounded p-2 outline-none ${errors.email ? 'border-[1px] border-solid border-[#D72C0D] bg-[#FFF4F4]' : 'outline-none'\r\n                            }`}\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    {errors.email && (\r\n                        <div className=\"mt-[4px] gap-[8px] text-[#D72C0D] flex flex-row text-[14px]\">\r\n                            <img src={errorIcon} />\r\n                            <p>{errors.email}</p>\r\n                        </div>\r\n                    )}\r\n                    <input placeholder='Enter your password' className='mt-3 rounded p-2 outline-none' value={password} onChange={e => setPassword(e.target.value)} />\r\n                </div>\r\n                <button className='bg-[#555] rounded-[4px] mt-6 text-[#fff] p-2 outline-none'>Register</button>\r\n            </form>\r\n\r\n            <div className=\"flex justify-center items-center space-x-[-10px]\">\r\n                <div className=\"\">\r\n                    <img src={errorIcon} alt=\"Image 1\" className=\"w-[40px] h-[40px] rounded-lg object-cover transition-transform transform hover:scale-110\" />\r\n                </div>\r\n                <div className=\"\">\r\n                    <img src={errorIcon} alt=\"Image 2\" className=\"w-[56px] h-[56px] rounded-lg object-cover transition-transform transform hover:scale-110\" />\r\n                </div>\r\n                <div className=\"\">\r\n                    <img src={errorIcon} alt=\"Image 3\" className=\"w-[40px] h-[40px] rounded-lg object-cover transition-transform transform hover:scale-110\" />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\CreatePost.tsx",[],[],"C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Blogs.tsx",["65"],[],"import React, { useState, useEffect } from 'react'\r\nimport Post from './Post'\r\n\r\nconst Blogs = () => {\r\n    const [posts, setPost] = useState([])\r\n\r\n    console.log({ posts })\r\n\r\n    useEffect(() => {\r\n        const response = fetch('http://localhost:4000/create').then(response => {\r\n            response.json().then(post => {\r\n                console.log({ post })\r\n                setPost(post)\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {posts.length > 0 ? posts.map((post: any) => <Post {...post} />) : <h1>Create post!</h1>}\r\n\r\n            <div className='flex items-center justify-center min-h-screen from-red-100 via-red-300 to-red-500 bg-gradient-to-br'>\r\n                <div className='w-full max-w-lg p-6 mx-auto bg-white rounded-2xl shadow-xl flex flex-col'>\r\n                    <div className=\"flex justify-between pb-4\">\r\n                        <div className=\"-rotate-90 cursor-pointer\">\r\n                            <svg width=\"12\" height=\"7\" viewBox=\"0 0 12 7\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M11.001 6L6.00098 1L1.00098 6\" stroke=\"black\" stroke-opacity=\"0.4\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                            </svg>\r\n                        </div>\r\n                        <span className=\"uppercase text-sm font-semibold text-gray-600\">january - 2022</span>\r\n                        <div className=\"rotate-90 cursor-pointer\">\r\n                            <svg width=\"12\" height=\"7\" viewBox=\"0 0 12 7\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M11.001 6L6.00098 1L1.00098 6\" stroke=\"black\" stroke-opacity=\"0.4\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                            </svg>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"flex justify-between font-medium uppercase text-xs pt-4 pb-2 border-t\">\r\n\r\n                        <div className=\"px-3 border rounded-sm w-14 h-5 flex items-center justify-center border-red-500 text-red-500 shadow-md\">\r\n                            sun\r\n                        </div>\r\n\r\n\r\n                        <span className=\"px-3 border rounded-sm w-14 h-5 flex items-center justify-center border-green-500 text-green-500 shadow-md\">\r\n                            mon\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-3 border rounded-sm w-14 h-5 flex items-center justify-center border-green-500 text-green-500 shadow-md\">\r\n                            tue\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-3 border rounded-sm w-14 h-5 flex items-center justify-center border-green-500 text-green-500 shadow-md\">\r\n                            wed\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-3 border rounded-sm w-14 h-5 flex items-center justify-center border-green-500 text-green-500 shadow-md\">\r\n                            thu\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-3 border rounded-sm w-14 h-5 flex items-center justify-center border-green-500 text-green-500 shadow-md\">\r\n                            fri\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-3 border rounded-sm w-14 h-5 flex items-center justify-center border-green-500 text-green-500 shadow-md\">\r\n                            sat\r\n                        </span>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-between font-medium text-sm pb-2\">\r\n\r\n                        <span className=\"px-1 text-gray-400 w-14 flex justify-center items-center\">\r\n                            30\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 text-gray-400 w-14 flex justify-center items-center\">\r\n                            31\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            01\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            02\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            03\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            04\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            05\r\n                        </span>\r\n\r\n                    </div>\r\n                    <div className=\"flex justify-between font-medium text-sm pb-2\">\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border border-red-500 text-red-500 cursor-pointer\">\r\n                            06\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            07\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            08\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            09\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            10\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            11\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            12\r\n                        </span>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-between font-medium text-sm pb-2\">\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border border-red-500 text-red-500 cursor-pointer\">\r\n                            13\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            14\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            15\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            16\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            17\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            18\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            19\r\n                        </span>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-between font-medium text-sm pb-2\">\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border border-red-500 text-red-500 cursor-pointer\">\r\n                            20\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            21\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            22\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            23\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            24\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border border-green-500 text-white bg-green-500 rounded-2xl cursor-pointer shadow-md\">\r\n                            25\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            26\r\n                        </span>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-between font-medium text-sm pb-2\">\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border border-red-500 text-red-500 cursor-pointer\">\r\n                            27\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            28\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            29\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 w-14 flex justify-center items-center border hover:border-green-500 hover:text-green-500 cursor-pointer\">\r\n                            30\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 text-gray-400 w-14 flex justify-center items-center\">\r\n                            01\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 text-gray-400 w-14 flex justify-center items-center\">\r\n                            02\r\n                        </span>\r\n\r\n\r\n                        <span className=\"px-1 text-gray-400 w-14 flex justify-center items-center\">\r\n                            03\r\n                        </span>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            </div>\r\n            )\r\n}\r\n\r\n            export default Blogs",{"ruleId":"66","severity":1,"message":"67","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":14},{"ruleId":"66","severity":1,"message":"70","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":24},{"ruleId":"66","severity":1,"message":"71","line":2,"column":26,"nodeType":"68","messageId":"69","endLine":2,"endColumn":31},{"ruleId":"72","severity":1,"message":"73","line":23,"column":17,"nodeType":"74","endLine":23,"endColumn":55},{"ruleId":"75","severity":1,"message":"76","line":27,"column":67,"nodeType":"74","endLine":27,"endColumn":96},{"ruleId":"66","severity":1,"message":"77","line":6,"column":12,"nodeType":"68","messageId":"69","endLine":6,"endColumn":17},{"ruleId":"66","severity":1,"message":"78","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":18},{"ruleId":"72","severity":1,"message":"73","line":70,"column":29,"nodeType":"74","endLine":70,"endColumn":52},{"ruleId":"79","severity":1,"message":"80","line":81,"column":21,"nodeType":"74","endLine":81,"endColumn":159},{"ruleId":"79","severity":1,"message":"80","line":84,"column":21,"nodeType":"74","endLine":84,"endColumn":159},{"ruleId":"79","severity":1,"message":"80","line":87,"column":21,"nodeType":"74","endLine":87,"endColumn":159},{"ruleId":"66","severity":1,"message":"81","line":10,"column":15,"nodeType":"68","messageId":"69","endLine":10,"endColumn":23},"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'ToastContainer' is defined but never used.","'toast' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'email' is assigned a value but never used.","'Fragment' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'response' is assigned a value but never used."]