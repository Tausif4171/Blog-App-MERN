[{"C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\index.tsx":"1","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\App.tsx":"2","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Layout.tsx":"3","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Post.tsx":"4","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Header.tsx":"5","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Login.tsx":"6","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Register.tsx":"7","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\CreatePost.tsx":"8"},{"size":272,"mtime":1687783192675,"results":"9","hashOfConfig":"10"},{"size":932,"mtime":1691515592827,"results":"11","hashOfConfig":"10"},{"size":257,"mtime":1688885216736,"results":"12","hashOfConfig":"10"},{"size":3331,"mtime":1689000192599,"results":"13","hashOfConfig":"10"},{"size":3045,"mtime":1691515636175,"results":"14","hashOfConfig":"10"},{"size":7005,"mtime":1690705335372,"results":"15","hashOfConfig":"10"},{"size":3986,"mtime":1691411841188,"results":"16","hashOfConfig":"10"},{"size":1930,"mtime":1691692475570,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"lrqhf2",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"21"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\index.tsx",[],[],[],"C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\App.tsx",["45"],[],"C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Layout.tsx",[],[],"C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Post.tsx",["46","47","48","49","50","51"],[],"import React from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './toast.css'\r\n\r\nfunction Post() {\r\n    const notify = () => toast.success(\"Wow so easy!\", {\r\n        position: toast.POSITION.BOTTOM_LEFT,\r\n        className: 'toast-message'\r\n    });\r\n    return (\r\n        <div className='flex flex-col justify-center items-center min-h-screen mt-16'>\r\n            <div className='w-[50%] lg:w-[30%] mb-10 bg-slate-50'>\r\n                <img src='https://techcrunch.com/wp-content/uploads/2023/03/GettyImages-1448152453.jpg?w=1390&crop=1' className='w-full' />\r\n                <div className='p-4'><h1 className='text-[20px] font-medium mb-2'>Inflection lands $1.3B investment to build more ‘personal’ AI</h1>\r\n                <div className='pb-2'>\r\n                    <p className='flex gap-[8px] text-[13px]'><a className='font-semibold'>John Doe</a><time>9-07-2023 11:14</time></p>\r\n                </div>\r\n                <p className=''>\r\n                    As first reported by Forbes, Inflection AI, an AI startup aiming to create “personal AI for everyone,” has closed a $1.3 billion funding\r\n                    round led by Microsoft, Reid Hoffman, Bill Gates, Eric Schmidt and new investor Nvidia.\r\n                </p>\r\n                <button onClick={notify}>Notify!</button>\r\n                <ToastContainer />\r\n            </div>\r\n            </div>\r\n\r\n            <div className='w-[50%] lg:w-[30%] mb-10 bg-slate-50'>\r\n                <img src='https://techcrunch.com/wp-content/uploads/2023/06/oak-park-river-forest-high-school.jpg?w=1390&crop=1' className='w-full' />\r\n                <div className='p-4'><h1 className='text-[20px] font-medium mb-2'>High school changes every student’s password to ‘Ch@ngeme!’</h1>\r\n                <div className='pb-2'>\r\n                    <p className='flex gap-[8px] text-[13px]'><a className='font-semibold'>Rahul Dravid</a><time>5-07-2023 10:18</time></p>\r\n                </div>\r\n                <p className=''>\r\n                    After a cybersecurity audit mistakenly reset everyone’s password, a high school changed every student’s password to\r\n                    “Ch@ngeme!” giving every student the chance to hack into any other student’s account, according to emails obtained by\r\n                    TechCrunch.\r\n                </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='w-[50%] lg:w-[30%] mb-10 bg-slate-50'>\r\n                <img src='https://techcrunch.com/wp-content/uploads/2021/06/GettyImages-1174418589-1.jpg?w=1390&crop=1' className='w-full' />\r\n                <div className='p-4'><h1 className='text-[20px] font-medium mb-2'>Crypto losses halved in Q2 2023 to $204M</h1>\r\n                <div className='pb-2'>\r\n                    <p className='flex gap-[8px] text-[13px]'><a className='font-semibold'>Rahul Jain</a><time>1-07-2023 9:00</time></p>\r\n                </div>\r\n                <p className=''>\r\n                    As if the pessimism around crypto wasn’t enough, the industry has historically been hounded by hackers and scammers looking\r\n                    to make a quick buck.\r\n                </p>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Header.tsx",["52"],[],"C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Login.tsx",["53"],[],"// import { Dialog, Transition } from '@headlessui/react'\r\nimport { Fragment, useState } from 'react'\r\n\r\nimport './toast.css'\r\nimport { useNavigate } from 'react-router-dom'\r\nfunction Login() {\r\n    // let [isOpen, setIsOpen] = useState(false)\r\n\r\n    // function closeModal() {\r\n    //     setIsOpen(false)\r\n    // }\r\n\r\n    // function openModal() {\r\n    //     setIsOpen(true)\r\n    // }\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const navigate = useNavigate()\r\n    const login = async (e: any) => {\r\n        e.preventDefault()\r\n        const response = await fetch('http://localhost:4000/login', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ email, password }),\r\n            headers: { 'Content-Type': 'application/json' },\r\n            credentials: 'include'\r\n        })\r\n        console.log(response)\r\n        if (response.status === 200) {\r\n            navigate('/')\r\n        }\r\n        else {\r\n            alert('please enter correct credential!')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className='flex flex-col w-[25%] mx-auto my-[80px]' onSubmit={login}>\r\n                {/* <label className='align-center items-center'>Login</label> */}\r\n                <div className='flex flex-col'>\r\n                    <input\r\n                        placeholder='Enter your email'\r\n                        className='mt-3 rounded p-2 outline-none'\r\n                        value={email} onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    <input\r\n                        placeholder='Enter your password'\r\n                        className='mt-3 rounded p-2 outline-none'\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                    />\r\n                </div>\r\n                <button className='bg-[#555] rounded-[4px] mt-6 text-[#fff] p-2'>Login</button>\r\n            </form>\r\n\r\n            {/* <button className=\"ripple\">Button</button> */}\r\n\r\n            {/* <div>\r\n                <button onClick={handleOpenModal}>Open Modal</button>\r\n                {isModalOpen && (\r\n                    <div className={` ${isModalOpen ? 'modal-content' : 'animate-fade-out'} modal fixed left-1/2 top-1/4 bg-[#fff] w-[459px] rounded-[8px] h-auto shadow-md`}>\r\n                        <div >\r\n                            <h3 className=\"modal-heading\">Modal Title</h3>\r\n                            <p>Modal Content</p>\r\n                            <button onClick={handleCloseModal}>Close Modal</button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div> */}\r\n\r\n            {/* <div>\r\n                <button onClick={handleOpenModal}>Open Modal</button>\r\n                <div className={`modal-overlay ${isModalOpen ? 'visible' : 'hidden'}`}>\r\n                    <div className={`modal-content ${isModalOpen ? 'visible' : 'hidden'}`}>\r\n                        <h3 className=\"modal-heading\">Modal Title</h3>\r\n                        <p>Modal Content</p>\r\n                        <button onClick={handleCloseModal}>Close Modal</button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"fixed inset-0 flex items-center justify-center\">\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={openModal}\r\n                    className=\"rounded-md bg-black bg-opacity-20 px-4 py-2 text-sm font-medium text-white hover:bg-opacity-30 focus:outline-none focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75\"\r\n                >\r\n                    Open dialog\r\n                </button>\r\n            </div>\r\n\r\n            <Transition appear show={isOpen} as={Fragment}>\r\n                <Dialog className=\"relative z-10\" onClose={closeModal}>\r\n                    <Transition.Child\r\n                        as={Fragment}\r\n                        enter=\"ease-out duration-300\"\r\n                        enterFrom=\"opacity-0\"\r\n                        enterTo=\"opacity-100\"\r\n                        leave=\"ease-in duration-200\"\r\n                        leaveFrom=\"opacity-100\"\r\n                        leaveTo=\"opacity-0\"\r\n                    >\r\n                        <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\r\n                    </Transition.Child>\r\n\r\n                    <div className=\"fixed inset-0 overflow-y-auto\">\r\n                        <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\r\n                            <Transition.Child\r\n                                as={Fragment}\r\n                                enter=\"ease-out duration-300\"\r\n                                enterFrom=\"opacity-0 scale-95\"\r\n                                enterTo=\"opacity-100 scale-100\"\r\n                                leave=\"ease-in duration-200\"\r\n                                leaveFrom=\"opacity-100 scale-100\"\r\n                                leaveTo=\"opacity-0 scale-95\"\r\n                            >\r\n                                <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all\">\r\n                                    <Dialog.Title\r\n\r\n                                        className=\"text-lg font-medium leading-6 text-gray-900\"\r\n                                    >\r\n                                        Payment successful\r\n                                    </Dialog.Title>\r\n                                    <div className=\"mt-2\">\r\n                                        <p className=\"text-sm text-gray-500\">\r\n                                            Your payment has been successfully submitted. We’ve sent\r\n                                            you an email with all of the details of your order.\r\n                                        </p>\r\n                                    </div>\r\n\r\n                                    <div className=\"mt-4\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"inline-flex justify-center rounded-md border border-transparent bg-blue-100 px-4 py-2 text-sm font-medium text-blue-900 hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2\"\r\n                                            onClick={closeModal}\r\n                                        >\r\n                                            Got it, thanks!\r\n                                        </button>\r\n                                    </div>\r\n                                </Dialog.Panel>\r\n                            </Transition.Child>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n            </Transition> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\Register.tsx",["54","55","56","57"],[],"C:\\Users\\LENOVO\\Desktop\\Projects\\blog-app\\frontend\\src\\components\\CreatePost.tsx",[],[],{"ruleId":"58","severity":1,"message":"59","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":14},{"ruleId":"62","severity":1,"message":"63","line":14,"column":17,"nodeType":"64","endLine":14,"endColumn":140},{"ruleId":"65","severity":1,"message":"66","line":17,"column":63,"nodeType":"64","endLine":17,"endColumn":92},{"ruleId":"62","severity":1,"message":"63","line":29,"column":17,"nodeType":"64","endLine":29,"endColumn":151},{"ruleId":"65","severity":1,"message":"66","line":32,"column":63,"nodeType":"64","endLine":32,"endColumn":92},{"ruleId":"62","severity":1,"message":"63","line":43,"column":17,"nodeType":"64","endLine":43,"endColumn":142},{"ruleId":"65","severity":1,"message":"66","line":46,"column":63,"nodeType":"64","endLine":46,"endColumn":92},{"ruleId":"58","severity":1,"message":"67","line":6,"column":12,"nodeType":"60","messageId":"61","endLine":6,"endColumn":17},{"ruleId":"58","severity":1,"message":"68","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":18},{"ruleId":"62","severity":1,"message":"63","line":70,"column":29,"nodeType":"64","endLine":70,"endColumn":52},{"ruleId":"69","severity":1,"message":"70","line":81,"column":21,"nodeType":"64","endLine":81,"endColumn":159},{"ruleId":"69","severity":1,"message":"70","line":84,"column":21,"nodeType":"64","endLine":84,"endColumn":159},{"ruleId":"69","severity":1,"message":"70","line":87,"column":21,"nodeType":"64","endLine":87,"endColumn":159},"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'email' is assigned a value but never used.","'Fragment' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop."]